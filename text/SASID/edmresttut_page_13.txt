# Define the GET function. This function defines request headers, # submits the request, and returns both the response body and# the response header.def get(url1, accessToken1, accept):    headers = {"Accept": accept,               "Authorization": "bearer " + accessToken1}    try:        # Submit the request.        req = urllib2.Request(url1, headers=headers)        # Open the response, and convert it to a string.        domainsResponse = urllib2.urlopen(req)        body = domainsResponse.read()        # Return the response body and the response headers.        respHeaders = domainsResponse.headers        return body, respHeaders    except urllib3.URLError as e:        if hasattr(e, 'reason'):            print ('Failed to reach a server.')            print ('Error: ', e.read())        elif hasattr(e, 'code'):            print ('The server could not fulfill the request.')            print ('Error: ', e.read())    except urllib3.HTTPError as e:        print ('Error: ', e.read())# Define the POST function. This function converts the request body into# a JSON object, defines the request headers, posts the request, and # returns the response.def post(url1, contentType, accept, accessToken, body):    headers = {"Accept": accept,               "Authorization": "bearer " + accessToken,               "Content-Type": contentType }    # Convert the request body to a JSON object.     reqBody = json.loads(body)    # Post the request.    req = sess.post(url1, json=reqBody, headers=headers)    return req;# Define the PUT function. This function converts the request body into# a JSON object, defines the request headers, and submits the request.# The conditionalPutKey and conditionalPutValue fields are used to # identify a specific state of the resource. See "Updating Objects with # The put() Function".def put(url1, contentType, accept, accessToken, \        conditionalPutKey, conditionalPutValue, body):    headers = {"Accept": accept,               "Authorization": "bearer " + accessToken,               "Content-Type": contentType,               conditionalPutKey : conditionalPutValue } 
8Chapter 2 / Define Basic Methods and Get an Access Token