PostgreSQL does not support the partitioning of existing tables, so you must re-create the subject 
contacts tables as partitioned tables. In the SQL code that is generated by 
generatePostgreSQLPartitions.sh, IF statements are enclosed by the begin transaction and commit 
transaction directives. If an error occurs, changes to the database are rolled back by PostgreSQL.
Syntax
To execute the generatePostgreSQLPartitions script, enter the following command:generatePostgreSQLPartitions.sh dbschema      "first_partition_start_timestamp"      partition_granularity      partition_size      partition_number      > output_file_name.sql
To execute the generateOraclePartitions script, enter the following command:generateOraclePartitions.sh dbschema      "first_partition_start_date"      partition_granularity      partition_size      > output_file_name.sql
Arguments
dbschema
specify subjectcontacts
.
first_partition_start_date
specifies the start date of the first partition. Enclose the date in single quotation marks. Specify the 
date in the following format:YYYY-MM-DD
Applies togenerateOraclePartitions script onlyExample'2020–06–02'
first_partition_start_timestamp
specifies the starting timestamp of the first partition. Enclose the timestamp in single quotation 
marks. Specify the timestamp in the following format:YYYY-MM-DD hh:mm:ss [AM|PM]
Applies togeneratePostgreSQLPartitions script onlyExample'2020-04-15 12:00:00 AM'
partition_granularity
specifies the granularity of the partitions. Specify hour
, day
, month
, or year
.
partition_size
specifies the number of hours, days, months, or years that you want to include in each partition. 
For example, if you specify month
 for the partition granularity and 3
 for the partition size, then each 
partition includes the data for three months. Specify a whole number greater than zero.31